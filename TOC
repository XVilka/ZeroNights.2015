
Кочков Антон <anton.kochkov@gmail.com>

Anton Kochkov (xvilka) - реверс-инженер, ведущий разработчик в
компании Security Code.
Участник многих проектов, включая radare2, coreboot и MEre. Область
его интересов лежит в общих принципах обратной разработки, её
автоматизации а также практическом применении на примере различных
прошивок самых разнообразных устройств - начиная от классических UEFI
прошивок для x86 платформы, и заканчивая прошивками IoT и embedded.

Security Code Ltd., ведущий программист
Москва

ٍESIL - универсальный IL (Intermediate Language) для radare2
==============================================

Краткое описание
----------------
ESIL расшифровывается как 'Evaluable Strings Intermediate Language'.
Его предназначение - возможность описания семантики любой инструкции
любого процессора (от VLIW DSP, до 4-х битных Intel 4004. Также ESIL
может быть интерпретирован с помощью встроенной в radare2 виртуальной
машины. Данный доклад предоставит краткое введение в тему различных IL
и опишет главные отличия от них, и что же привело к мысли его
создания. Будут описаны практические примеры использования ESIL,
конвертация его в другие подобные языки (OpenREIL) и будущее развитие.

Полное описание
---------------

1. Что же такое IL?
1.1 Intermediate Language - введение
1.2 REIL
1.3 BAP
1.4 MAIL, BitBlaze (VineIL/VEX)
1.5 RREIL и OpenREIL

2. ESIL - отличия от других подобных языков
2.1 Обратная польская нотация - для ускорения машинного анализа
2.2 Строковое представление - для упрощения понимания и редактирования
2.3 Универсальность - создан с учетом разнообразных архитектур
2.4 Расширяемость - создание новых операций и коллбеков к ним
2.5 Поддерживаемые архитектуры

3. Практическое применение ( + небольшое демо, для нескольких
описанных практических кейсов)
3.1 Эмуляция участков кода
3.2 Совместная отладка (нативная + эмуляция ESIL)
3.3 Эмуляция VM, используемых в malware
3.4 Автоматическое отображение результатов эмуляции в дизассемблере
3.5 Конвертация в другие языки - OpenREIL

4. Radeco IL и Radeco decompiler
4.1 ESIL в качестве входных данных для Radeco
4.2 Причины появления декомпилятора
4.3 Описание промежуточного представления Radeco IL

5. Пути будущего развития
5.1 Больше поддерживаемых архитектур
5.2 Визуальная отладка и трассировка с помощью ESIL
5.3 Интеграция с SMT решателями
5.4 И, конечно, декомпиляция - Radeco

